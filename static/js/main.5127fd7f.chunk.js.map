{"version":3,"sources":["actions.js","components/itemHover/itemHover.js","components/item/item.js","components/mysteryIcon/mysteryIcon.js","components/settings/settings.js","components/progressBar/progressBar.js","components/dialog/dialog.js","components/game/game.js","index.js"],"names":["deselect","value","type","imgPath","process","MainBody","styled","div","ItemImage","attrs","props","url","Header","HeaderText","Name","Price","Symbol","img","Ability","AbilityHeader","AbilityHeaderCosts","span","AbilityHeaderStat","AbilityText","Attributes","AttributeNumber","Lore","ItemHover","renderUpgrade","items","index","upgrade","name","cd","alt","src","mc","desc","renderToggle","toggle","renderActive","active","renderPassive","passive","i","length","push","key","renderUse","use","renderAttributes","attrib","className","header","footer","this","easy","id","dname","cost","lore","React","Component","connect","state","wrapperKeyFrame","keyframes","Wrapper","Icon","breakpoint","FadedIcon","ItemInfo","Item","getItemIndex","selectItem","locked","clickable","selected","includes","dispatch","wrapperRef","createRef","wrapper","current","classList","add","setTimeout","remove","prevProps","prevState","snapshot","imgURL","hover","onClick","ref","MysteryIcon","deselectItem","icon","dialogKeyFrame","Dialog","OptionText","WarningText","ConfirmButton","button","CancelButton","DifficultyButton","Settings","setEasy","setState","isEasy","setHard","setClassic","isClassic","setTimed","apply","classic","onClose","close","warning","disabled","Border","Bar","percent","r","g","ProgressBar","percentage","mainKeyFrame","Main","Row","LargeText","MediumText","LargeSymbolText","RestartButton","getAnswer","components","recipe","item","console","log","pop","win","score","streak","Page","GameMain","QuizItem","PopUpTextKeyFrames","PopUpText","StatText","OptionButton","streakNames","timeSlow","timeNormal","timeFast","Game","getItemData","itemID","generateRandomItems","isBroadsword","isClaymore","curr","filtered","filter","itemsToQuiz","materials","splice","componentCosts","itemdata","recipeCost","RecipeCost","costFiltered","randItems","numRand","concat","rand","Math","floor","random","alreadyPicked","getQuizComponents","component","nextQuiz","j","tmp","currentRecipe","currentQuiz","startTimer","getScorePopup","text","amount","max","timeLeft","maxTime","reset","quiz","slice","tries","frozen","openSettings","settings","clearInterval","timer","handleSettings","time","setInterval","newTime","createMysteryIcons","indicies","numIcons","icons","createQuizComponents","quizItems","popupRef","itemsWithRecipe","materialIDs","sort","correct","popup","currentStreak","currentScore","currentTries","game","options","theme","breakpoints","xs","sm","md","lg","xl","initialState","store","createStore","action","produce","draft","indexOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5127fd7f.chunk.js","sourcesContent":["export function select(value) {\r\n    return {\r\n        type : \"SELECT\",\r\n        value\r\n    };\r\n}\r\n\r\nexport function deselect(value) {\r\n    return {\r\n        type : \"DESELECT\",\r\n        value\r\n    };\r\n}\r\n\r\nexport function reset() {\r\n    return {\r\n        type : \"RESET\"\r\n    };\r\n}\r\n\r\nexport function applySettings(value) {\r\n    return {\r\n        type : \"APPLY_SETTINGS\",\r\n        value\r\n    };\r\n}\r\n\r\nexport function setDifficulty(value) {\r\n    return {\r\n        type : \"SET_DIFFICULTY\",\r\n        value\r\n    };\r\n}\r\n\r\nexport function setGameMode(value) {\r\n    return {\r\n        type : \"SET_GAME_MODE\",\r\n        value\r\n    };\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport items from '../../data/items.json';\r\nimport styled from 'styled-components';\r\n\r\nconst imgPath = process.env.PUBLIC_URL + '/images/';\r\n\r\nconst MainBody = styled.div`\r\n    border: 2px rgb(70, 70, 70) groove;\r\n    background-color: #333333;\r\n    color: #cccccc;\r\n    width: 310px;\r\n    text-align: left;\r\n`;\r\n\r\nconst ItemImage = styled.div.attrs(props => ({\r\n    url: props.url,\r\n}))`\r\n    background-size: cover;\r\n    width: 63.75px;\r\n    height 48px;\r\n    background-image: url(${props => props.url});\r\n`;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    padding: 5px;\r\n`;\r\n\r\nconst HeaderText = styled.div`\r\n    display: flex;\r\n    margin-left: 10px;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Name = styled.div`\r\n    color: white;\r\n    font-size: 14pt;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Price = styled.div`\r\n    color: gold;\r\n    font-weight: bold;\r\n    display: flex;\r\n`;\r\n\r\nconst Symbol = styled.img`\r\n    margin: auto 5px auto 0px;\r\n    max-height: 1em;\r\n`;\r\n\r\nconst Ability = styled.div`\r\n    background-color:#212b3d;\r\n    margin-top: 1em;\r\n`;\r\n\r\nconst AbilityHeader = styled.div`\r\n    background-color:rgb(64, 76, 99);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 5px;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst AbilityHeaderCosts = styled.span`\r\n    display: flex;\r\n`;\r\n\r\nconst AbilityHeaderStat = styled.span`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: auto 0;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst AbilityText = styled.div`\r\n    padding: 5px;\r\n    white-space: pre-wrap;\r\n`;\r\n\r\nconst Attributes = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 5px;\r\n    margin-bottom: -0.5em;\r\n`;\r\n\r\nconst AttributeNumber = styled.span`\r\n    color:#efefef\r\n`;\r\n\r\nconst Lore = styled.div`\r\n    padding: 5px;\r\n    font-style: italic;\r\n    color: #aaaaaa\r\n`;\r\nclass ItemHover extends React.Component {\r\n\r\n    renderUpgrade = () => {\r\n        if (\"upgrade\" in items[this.props.index]) {\r\n            return ( \r\n                <Ability>\r\n                    <AbilityHeader>\r\n                        Upgrade: {items[this.props.index].upgrade[0].name}\r\n                        <AbilityHeaderCosts>\r\n                            {items[this.props.index].cd !== false && \r\n                                <AbilityHeaderStat>\r\n                                    <Symbol alt=\"\" src={imgPath + \"cooldown.png\"} />\r\n                                    {items[this.props.index].cd}\r\n                                </AbilityHeaderStat>\r\n                            }\r\n                            {items[this.props.index].mc !== false && \r\n                                <AbilityHeaderStat>\r\n                                    <Symbol alt=\"\" src={imgPath + \"mana.png\"} />\r\n                                    {items[this.props.index].mc}\r\n                                </AbilityHeaderStat>\r\n                            }\r\n                        </AbilityHeaderCosts>\r\n                    </AbilityHeader>\r\n                    <AbilityText>{items[this.props.index].upgrade[0].desc}</AbilityText>\r\n                </Ability>\r\n            );\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderToggle = () => {\r\n        if (\"toggle\" in items[this.props.index]) {\r\n            return (\r\n                <Ability>\r\n                    <AbilityHeader>\r\n                        Toggle: {items[this.props.index].toggle[0].name}\r\n                        <AbilityHeaderCosts>\r\n                            {items[this.props.index].cd !== false && \r\n                                <AbilityHeaderStat>\r\n                                    <Symbol alt=\"\" src={imgPath + \"cooldown.png\"} />\r\n                                    {items[this.props.index].cd}\r\n                                </AbilityHeaderStat>\r\n                            }\r\n                            {items[this.props.index].mc !== false && \r\n                                <AbilityHeaderStat>\r\n                                    <Symbol alt=\"\" src={imgPath + \"mana.png\"} />\r\n                                    {items[this.props.index].mc}\r\n                                </AbilityHeaderStat>\r\n                            }\r\n                        </AbilityHeaderCosts>\r\n                        \r\n                    </AbilityHeader>\r\n                    <AbilityText>{items[this.props.index].toggle[0].desc}</AbilityText>\r\n                </Ability>\r\n            );\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderActive = () => {\r\n        if (\"active\" in items[this.props.index]) {\r\n            return (\r\n                <Ability>\r\n                    <AbilityHeader>\r\n                        Active: {items[this.props.index].active[0].name}\r\n                        <AbilityHeaderCosts>\r\n                            {items[this.props.index].cd !== false && \r\n                                <AbilityHeaderStat>\r\n                                    <Symbol alt=\"\" src={imgPath + \"cooldown.png\"} />\r\n                                    {items[this.props.index].cd}\r\n                                </AbilityHeaderStat>\r\n                            }\r\n                            {items[this.props.index].mc !== false && \r\n                                <AbilityHeaderStat>\r\n                                    <Symbol alt=\"\" src={imgPath + \"mana.png\"} />\r\n                                    {items[this.props.index].mc}\r\n                                </AbilityHeaderStat>\r\n                            }\r\n                        </AbilityHeaderCosts>\r\n                    </AbilityHeader>\r\n                    <AbilityText>{items[this.props.index].active[0].desc}</AbilityText>\r\n                </Ability>\r\n            );\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderPassive = () => {\r\n        let passive = [];\r\n        if (\"passive\" in items[this.props.index]) {\r\n            for (let i = 0; i < items[this.props.index].passive.length; i++) {\r\n                passive.push(\r\n                    <Ability key={i}>\r\n                        <AbilityHeader>\r\n                            Passive: {items[this.props.index].passive[i].name}\r\n                        </AbilityHeader>\r\n                        <AbilityText>{items[this.props.index].passive[i].desc}</AbilityText>\r\n                    </Ability>\r\n                );\r\n            }\r\n        }\r\n        return passive;\r\n    }\r\n\r\n    renderUse = () => {\r\n        if (\"use\" in items[this.props.index]) {\r\n            return (\r\n                <Ability>\r\n                    <AbilityHeader>\r\n                        Use: {items[this.props.index].use[0].name}\r\n                        <AbilityHeaderCosts>\r\n                            {items[this.props.index].cd !== false && \r\n                                <AbilityHeaderStat>\r\n                                    <Symbol alt=\"\" src={imgPath + \"cooldown.png\"} />\r\n                                    {items[this.props.index].cd}\r\n                                </AbilityHeaderStat>\r\n                            }\r\n                            {items[this.props.index].mc !== false && \r\n                                <AbilityHeaderStat>\r\n                                    <Symbol alt=\"\" src={imgPath + \"mana.png\"} />\r\n                                    {items[this.props.index].mc}\r\n                                </AbilityHeaderStat>\r\n                            }\r\n                        </AbilityHeaderCosts>\r\n                    </AbilityHeader>\r\n                    <AbilityText>{items[this.props.index].use[0].desc}</AbilityText>\r\n                </Ability>\r\n            );\r\n        }\r\n        return;\r\n    }\r\n\r\n    renderAttributes = () => {\r\n        let attrib = [];\r\n        for (let i = 0; i < items[this.props.index].attrib.length; i++) {\r\n            attrib.push(\r\n                <span key={i} className=\"itemAttribText\">\r\n                    {items[this.props.index].attrib[i].header}\r\n                    <AttributeNumber>\r\n                        {items[this.props.index].attrib[i].value + \" \"}\r\n                    </AttributeNumber>\r\n                    {items[this.props.index].attrib[i].footer}\r\n                </span>\r\n            )\r\n        }\r\n        return attrib;\r\n    }\r\n\r\n    render() {\r\n        if (this.props.index === -1) {\r\n            return (\r\n                <MainBody>\r\n                    <Header>\r\n                        <ItemImage url={imgPath + 'recipe_lg.png'} />\r\n                        <HeaderText>\r\n                            <Name>Recipe</Name>\r\n                        </HeaderText>\r\n                    </Header>\r\n                </MainBody>\r\n            );\r\n        } else {\r\n            if (this.props.easy) {\r\n                return (\r\n                    <MainBody>\r\n                        <Header>\r\n                            <ItemImage url={imgPath + items[this.props.index].id + \"_lg.png\"} />\r\n                            <HeaderText>\r\n                                <Name>{items[this.props.index].dname}</Name>\r\n                                <Price>\r\n                                    <Symbol alt=\"\" src={imgPath + \"gold.png\"} />\r\n                                    {items[this.props.index].cost}\r\n                                </Price>\r\n                            </HeaderText>\r\n                        </Header>\r\n                        <Attributes>\r\n                            {this.renderAttributes()}\r\n                        </Attributes>\r\n                        {this.renderUpgrade()}\r\n                        {this.renderToggle()}\r\n                        {this.renderActive()}\r\n                        {this.renderPassive()}\r\n                        {this.renderUse()}\r\n                        <Lore>\r\n                            {items[this.props.index].lore}\r\n                        </Lore>\r\n                    </MainBody>\r\n                );\r\n            } else {\r\n                return (\r\n                    <MainBody>\r\n                        <Header>\r\n                            <ItemImage url={imgPath + items[this.props.index].id + \"_lg.png\"} />\r\n                            <HeaderText>\r\n                                <Name>{items[this.props.index].dname}</Name>\r\n                            </HeaderText>\r\n                        </Header>\r\n                    </MainBody>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        easy: state.easy\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ItemHover);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport items from '../../data/items.json';\r\nimport ItemHover from '../itemHover/itemHover.js';\r\nimport { select, deselect} from '../../actions.js';\r\nimport styled , { keyframes } from 'styled-components';\r\nimport breakpoint from 'styled-components-breakpoint';\r\n\r\nconst imgPath = process.env.PUBLIC_URL + '/images/';\r\n\r\nconst wrapperKeyFrame = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        opacity 1;\r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 1%;\r\n    border: 2px #343434 solid;\r\n    &.fade-in {\r\n        z-index: -1;\r\n        animation: ${wrapperKeyFrame} 0.3s ease-in-out 0s 1;\r\n    }\r\n`;\r\n\r\nconst Icon = styled.div.attrs(props => ({\r\n    url: props.url,\r\n}))`\r\n    background-size: cover;\r\n    ${ breakpoint('xs') `width:21.25px; height 16px;`}\r\n    ${ breakpoint('sm') `width:42.5px; height 32px;`}\r\n    ${ breakpoint('md') `width: 63.75px; height 48px;`}\r\n    ${ breakpoint('lg') `width: 85px; height 64px;`}\r\n    ${ breakpoint('xl') `width: 85px; height 64px;`}\r\n    background-image: url(${props => props.url});\r\n`;\r\n\r\nconst FadedIcon = styled.div.attrs(props => ({\r\n    url: props.url,\r\n}))`\r\n    ${ breakpoint('xs') `width:21.25px; height 16px;`}\r\n    ${ breakpoint('sm') `width:42.5px; height 32px;`}\r\n    ${ breakpoint('md') `width: 63.75px; height 48px;`}\r\n    ${ breakpoint('lg') `width: 85px; height 64px;`}\r\n    ${ breakpoint('xl') `width: 85px; height 64px;`}\r\n    background-size: cover;\r\n    filter: saturate(10%) opacity(50%);\r\n    background-image: url(${props => props.url});\r\n    z-index: 0;\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n    display: none;\r\n    z-index: 1;\r\n    margin-top: 3px;\r\n    margin-left: -2px;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    ${Wrapper}:hover & {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nclass Item extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n    }\r\n\r\n    getItemIndex = () => {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].id === this.props.id) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    selectItem = () => {\r\n        if (this.props.locked !== true && this.props.clickable === true) {\r\n            if (this.props.selected.includes(this.props.index)) {\r\n                this.props.dispatch(deselect(this.props.index));\r\n            } else {\r\n                this.props.dispatch(select(this.props.index));\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const wrapper = this.wrapperRef.current;\r\n        wrapper.classList.add('fade-in');\r\n        setTimeout(() => {\r\n            wrapper.classList.remove('fade-in');\r\n        }, 300)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.locked === true) {\r\n            const wrapper = this.wrapperRef.current;\r\n            wrapper.classList.add('fade-in');\r\n            setTimeout(() => {\r\n                wrapper.classList.remove('fade-in');\r\n            }, 300)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let imgURL, hover;\r\n        if (this.props.id === \"recipe\") {\r\n            imgURL = imgPath + \"recipe_lg.png\"\r\n            hover = <ItemHover index={-1}></ItemHover>\r\n        } else {\r\n            imgURL = imgPath + this.props.id + \"_lg.png\"\r\n            hover = <ItemHover index={this.getItemIndex()}></ItemHover>\r\n        }\r\n        let div;\r\n        if (this.props.selected.includes(this.props.index)) {\r\n            div = <FadedIcon url={imgURL} onClick={this.selectItem}></FadedIcon>\r\n        } else {\r\n            div = <Icon url={imgURL} onClick={this.selectItem}></Icon>\r\n        }\r\n\r\n        return(\r\n            <Wrapper ref={this.wrapperRef}>\r\n                {div}\r\n                <ItemInfo>\r\n                    {hover}\r\n                </ItemInfo>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        selected : state.selected\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Item);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport items from '../../data/items.json';\r\nimport ItemHover from '../itemHover/itemHover.js';\r\nimport { deselect } from '../../actions.js';\r\nimport styled , { keyframes } from 'styled-components';\r\nimport breakpoint from 'styled-components-breakpoint';\r\n\r\nconst imgPath = process.env.PUBLIC_URL + '/images/';\r\n\r\nconst wrapperKeyFrame = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        opacity 1;\r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 1%;\r\n    border: 2px #343434 solid;\r\n    &.fade-in {\r\n        z-index: -1;\r\n        animation: ${wrapperKeyFrame} 0.3s ease-in-out 0s 1;\r\n    }\r\n`;\r\n\r\nconst Icon = styled.div.attrs(props => ({\r\n    url: props.url,\r\n}))`\r\n    ${ breakpoint('xs') `width:21.25px; height 16px;`}\r\n    ${ breakpoint('sm') `width:42.5px; height 32px;`}\r\n    ${ breakpoint('md') `width: 63.75px; height 48px;`}\r\n    ${ breakpoint('lg') `width: 85px; height 64px;`}\r\n    ${ breakpoint('xl') `width: 85px; height 64px;`}\r\n    background-size: cover;\r\n    background-image: url(${props => props.url});\r\n`;\r\n\r\nconst ItemInfo = styled.div`\r\n    display: none;\r\n    z-index: 1;\r\n    margin-top: 3px;\r\n    margin-left: -2px;\r\n    pointer-events: none;\r\n    ${Wrapper}:hover & {\r\n        display: block;\r\n        position: absolute;\r\n    }\r\n`;\r\n\r\nclass MysteryIcon extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n    }\r\n\r\n    getItemIndex = () => {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].id === this.props.id) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    deselectItem = () => {\r\n        this.props.dispatch(deselect(this.props.index));\r\n    }\r\n\r\n    componentDidMount() {\r\n        const wrapper = this.wrapperRef.current;\r\n        wrapper.classList.add('fade-in');\r\n        setTimeout(() => {\r\n            wrapper.classList.remove('fade-in');\r\n        }, 300)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ((prevProps.id === 'unknown' && this.props.id !== 'unknown') || (this.props.id === 'unknown' && prevProps.id !== 'unknown')) {\r\n            const wrapper = this.wrapperRef.current;\r\n            wrapper.classList.add('fade-in');\r\n            setTimeout(() => {\r\n                wrapper.classList.remove('fade-in');\r\n            }, 300)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let icon, hover;\r\n        if (this.props.id === 'unknown') {\r\n            icon = <Icon url={imgPath + \"item-slot-unknown.png\"}></Icon>\r\n            hover = <div></div>;\r\n        } else if (this.props.id === \"recipe\") {\r\n            icon = <Icon url={imgPath + \"recipe_lg.png\"} onClick={this.deselectItem}></Icon>\r\n            hover = <ItemInfo>\r\n                        <ItemHover index={-1}></ItemHover>\r\n                    </ItemInfo>\r\n        } else {\r\n            icon = <Icon url={imgPath + this.props.id + \"_lg.png\"} onClick={this.deselectItem}></Icon>\r\n            hover = <ItemInfo>\r\n                        <ItemHover index={this.getItemIndex()}></ItemHover>\r\n                    </ItemInfo>\r\n        }\r\n        return (\r\n            <Wrapper ref={this.wrapperRef}>\r\n                {icon}\r\n                {hover}\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        selected : state.selected\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MysteryIcon);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { applySettings } from '../../actions.js';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst dialogKeyFrame = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n`;\r\nconst Dialog = styled.div`s\r\n    width: 100%;\r\n    text-algin: center;\r\n    margin-top: -0.5em;\r\n    animation: ${dialogKeyFrame} 0.25s ease-in-out 0s 1;\r\n`;\r\n\r\nconst OptionText = styled.div`\r\n    font-size: 1.25em;\r\n    margin: 0.5em 0em;\r\n`;\r\n\r\nconst WarningText = styled.div`\r\n    font-size: 1em;\r\n    margin: 0.5em;\r\n    color: red;\r\n    min-height: 21px;\r\n`;\r\n\r\nconst ConfirmButton = styled.button`\r\n    background-color: #224022;\r\n    border: 1px solid #336033;\r\n    text-align: center;\r\n    color: #33ca33;\r\n    font-size: 1.25em;\r\n    padding: 6px 22px;\r\n    margin: 0em 0.5em 0.25em 0.5em;\r\n`;\r\n\r\nconst CancelButton = styled.button`\r\n    background-color: #601a1a;\r\n    border: 1px solid #703333;\r\n    text-align: center;\r\n    color: #da2222;\r\n    font-size: 1.25em;\r\n    padding: 6px 22px;\r\n    margin: 0em 0.5em 0.25em 0.5em;\r\n`;\r\n\r\nconst DifficultyButton = styled.button`\r\n    background-color: #2d2d2d;\r\n    border: 2px groove #3d3d3d;\r\n    text-align: center;\r\n    padding: 6px 22px;\r\n    color: #aaaaaa;\r\n    font-size: 1em;\r\n    margin: 0em 0.5em 0em 0.5em;\r\n    &:disabled {\r\n        background-color: #444444;\r\n        color: #dddddd;\r\n        border: 2px solid #666666;\r\n    }\r\n`;\r\n\r\nclass Settings extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isEasy: this.props.easy,\r\n            isClassic: this.props.classic\r\n        }\r\n    }\r\n    \r\n    setEasy = () => {\r\n        this.setState({isEasy : true});\r\n    }\r\n\r\n    setHard = () => {\r\n        this.setState({isEasy : false});\r\n    }\r\n\r\n    setClassic = () => {\r\n        this.setState({isClassic : true});\r\n    }\r\n\r\n    setTimed = () => {\r\n        this.setState({isClassic : false});\r\n    }\r\n\r\n    apply = () => {\r\n        if (this.state.isEasy === this.props.easy && this.state.isClassic === this.props.classic) {\r\n            this.props.onClose(false);\r\n        } else {\r\n            this.props.onClose(true);\r\n            this.props.dispatch(applySettings({easy: this.state.isEasy, classic: this.state.isClassic}));\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        this.props.onClose(false);\r\n    }\r\n\r\n    render() {\r\n        let warning = \"Changing options will reset game progress!\";\r\n        if (this.state.isEasy === this.props.easy && this.state.isClassic === this.props.classic) {\r\n            warning = \" \";\r\n        }\r\n        return (\r\n            <Dialog>\r\n                <OptionText>Difficulty</OptionText>\r\n                <div>\r\n                    <DifficultyButton onClick={this.setEasy} disabled={this.state.isEasy}>Easy</DifficultyButton>\r\n                    <DifficultyButton onClick={this.setHard} disabled={!this.state.isEasy}>Hard</DifficultyButton>\r\n                </div>\r\n                <OptionText>Game Mode</OptionText>\r\n                <div>\r\n                    <DifficultyButton onClick={this.setClassic} disabled={this.state.isClassic}>Classic</DifficultyButton>\r\n                    <DifficultyButton onClick={this.setTimed} disabled={!this.state.isClassic}>Time Attack</DifficultyButton>\r\n                </div>\r\n                <WarningText>{warning}</WarningText>\r\n                <div>\r\n                    <ConfirmButton onClick={this.apply}>Apply</ConfirmButton>\r\n                    <CancelButton onClick={this.close}>Cancel</CancelButton>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        classic : state.classic,\r\n        easy : state.easy\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Settings);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nconst Border = styled.div`\r\n    margin-bottom: 0.5em;\r\n    margin-top: -1em;\r\n    position: relative;\r\n    height: 5px;\r\n    width: 100%;\r\n    border-bottom: 2px solid rgb(49, 49, 49);\r\n`;\r\n\r\nconst Bar = styled.div.attrs(props => ({\r\n    percent: props.percent\r\n}))`\r\n    background: ${props => {\r\n        let r;\r\n        let g;\r\n        if (props.percent > 50) {\r\n            r = props.percent * -3 + 300;\r\n            g = 150;\r\n        } else {\r\n            g = props.percent * 3;\r\n            r = 150;\r\n        }\r\n        return \"rgb(\" + r + \",\" + g + \",0)\";\r\n    }};\r\n    height: 100%;\r\n    border-radius: inherit;\r\n    transition: width .1s linear;\r\n    width: ${props => props.percent}%;\r\n`;\r\n\r\nclass ProgressBar extends React.Component {\r\n    render() {\r\n        if (this.props.classic) {\r\n            return null;\r\n        } else {\r\n            return(\r\n                <Border>\r\n                    <Bar  percent={this.props.percentage}></Bar>\r\n                </Border>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        classic : state.classic\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProgressBar);","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Item from '../item/item.js';\r\nimport breakpoint from 'styled-components-breakpoint';\r\n\r\nconst mainKeyFrame = keyframes`\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst Main = styled.div`\r\n    text-align: center;\r\n    margin-top: -0.5em;\r\n    animation: ${mainKeyFrame} 0.25s ease-in-out 0s 1;\r\n`;\r\n\r\nconst Row = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst LargeText = styled.div`\r\n    ${ breakpoint('xs') `font-size: 1.5em;`}\r\n    ${ breakpoint('sm') `font-size: 2em;`}\r\n    ${ breakpoint('md') `font-size: 3em;`}\r\n    margin: 0.25em;\r\n`;\r\n\r\nconst MediumText = styled.div`\r\n    ${ breakpoint('xs') `font-size: 1em;`}\r\n    ${ breakpoint('sm') `font-size: 1.5em;`}\r\n    ${ breakpoint('md') `font-size: 2em;`}\r\n    margin: 0.25em;\r\n`;\r\n\r\nconst LargeSymbolText = styled.div`\r\n    ${ breakpoint('xs') `font-size: 1em;`}\r\n    ${ breakpoint('sm') `font-size: 1.5em;`}\r\n    ${ breakpoint('md') `font-size: 2em;`}\r\n    margin: auto 0;\r\n`;\r\n\r\nconst RestartButton = styled.button`\r\n    background-color: #333333;\r\n    border: 1px solid #444444;\r\n    text-align: center;\r\n    padding: 6px 22px;\r\n    color: #dddddd;\r\n    font-size: 1.5em;\r\n    margin-bottom: 0.25em;\r\n    margin-top: 0.5em;\r\n`;\r\n\r\nclass Dialog extends React.Component {\r\n\r\n    getAnswer = () => {\r\n        let components = [];\r\n        let recipe = this.props.item.components;\r\n        console.log(recipe);\r\n        for (let i = 0; i < recipe.length; i++) {\r\n            if (recipe[i] !== \"recipe\"){\r\n                components.push(<Item key={i} locked={true} clickable={false} id={recipe[i]}></Item>);\r\n            } else {\r\n                components.push(<Item id=\"recipe\" locked={true} clickable={false}></Item>);\r\n            }\r\n            components.push(<LargeSymbolText>+</LargeSymbolText>);\r\n        }\r\n        components.pop();\r\n        return components;\r\n    }\r\n\r\n    close = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        if (this.props.win) {\r\n            return(\r\n                <Main>\r\n                    <LargeText>Game Complete!</LargeText>\r\n                    <LargeText>Final Score: {this.props.score}</LargeText>\r\n                    <RestartButton onClick={this.close}>Replay?</RestartButton>\r\n                </Main>\r\n            );\r\n        } else {\r\n            return(\r\n                <Main>\r\n                    <LargeText>Game Over</LargeText>\r\n                    <MediumText>Final Score: {this.props.score}</MediumText>\r\n                    <MediumText>Items Completed: {this.props.streak}</MediumText>\r\n                    <Row>\r\n                        <Item id={this.props.item.id} locked={true} clickable={false}></Item>\r\n                        <LargeSymbolText>=</LargeSymbolText>\r\n                        {this.getAnswer()}\r\n                    </Row>\r\n                    <RestartButton onClick={this.close}>Restart</RestartButton>\r\n                </Main>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reset } from '../../actions.js';\r\nimport Item from '../item/item';\r\nimport MysteryIcon from '../mysteryIcon/mysteryIcon';\r\nimport Settings from '../settings/settings.js';\r\nimport ProgressBar from '../progressBar/progressBar.js';\r\nimport Dialog from '../dialog/dialog.js';\r\nimport items from '../../data/items.json';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport breakpoint from 'styled-components-breakpoint';\r\n\r\nconst Page = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst GameMain = styled.div`\r\n    ${ breakpoint('xs') `width: 100%;`}\r\n    ${ breakpoint('md') `width: 90%;`}\r\n    ${ breakpoint('lg') `width: 85%;`}\r\n    ${ breakpoint('xl') `width: 70%;`}\r\n    position: relative;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 2px rgb(49, 49, 49) solid;\r\n    padding: 1em 0em 1em 0em;\r\n`;\r\n\r\nconst QuizItem = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Row = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst PopUpTextKeyFrames = keyframes`\r\n    0% {\r\n        opacity: 1;\r\n        top: -2.5em;\r\n        z-index: 1;\r\n    }\r\n    100% {\r\n        opacity 0;\r\n        top: -4.5em;\r\n        z-index: 1;\r\n    }\r\n`;\r\nconst PopUpText = styled.div`\r\n    ${ breakpoint('xs') `font-size: 1.5em;`}\r\n    ${ breakpoint('md') `font-size: 3em;`}\r\n    opacity: 0;\r\n    position: relative;\r\n    color : #CC1400;\r\n    font-weight: bold;\r\n    margin : auto;\r\n    top: -2.5em;\r\n    text-align: center;\r\n    z-index: -1;\r\n    &.play-animation {\r\n        animation: ${PopUpTextKeyFrames} 1s ease-in-out 0s 1;\r\n    }\r\n`;\r\n\r\nconst StatText = styled.div`\r\n    ${ breakpoint('xs') `font-size: 1em;`}\r\n    ${ breakpoint('md') `font-size: 1.5em;`}\r\n`;\r\n\r\nconst OptionButton = styled.button.attrs(props => ({\r\n    url : props.url\r\n}))`\r\n    position: absolute;\r\n    bottom: 5px;\r\n    right: 5px;\r\n    background-color: inherit;\r\n    border: none;\r\n    text-align: center;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: #aaaaaa;\r\n    font-size: 1em;\r\n    background-image: url(${props => props.url});\r\n    background-size: 30px 30px;\r\n    padding: 0;\r\n`;\r\n\r\nconst initialTimeEasy = 10000;\r\nconst initialTimeHard = 6500;\r\n\r\nconst streakNames = [\"Wrong Answer\", \"Correct!\", \"Double Answer!\", \"Answering Spree!\", \"Dominating!\", \"Mega Answer!\", \"Unstoppable!\", \"Wicked Sick!\", \"Monster Answer!\", \"Godlike!\", \"Beyond Godlike!\"];\r\nconst timeSlow = [\"Close Call!\", \"Close One!\", \"Barely!\"];\r\nconst timeNormal = [\"Nice!\", \"Correct!\", \"Well Done!\", \"Great!\"];\r\nconst timeFast = [\"Speedy!\", \"With Alacrity!\", \"So Fast!\", \"Swift!\"];\r\nclass Game extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.popupRef = React.createRef();\r\n        \r\n        // First time initialization\r\n        //Get list of items to quiz\r\n        let itemsWithRecipe = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].components !== null) {\r\n                itemsWithRecipe.push(items[i]);\r\n            }\r\n        }\r\n        // Shuffle items\r\n        for (let i = itemsWithRecipe.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            let tmp = itemsWithRecipe[i];\r\n            itemsWithRecipe[i] = itemsWithRecipe[j];\r\n            itemsWithRecipe[j] = tmp;\r\n        }\r\n        // Initialize list of items that are components\r\n        let materialIDs = [];\r\n        for (let i = 0; i < itemsWithRecipe.length; i++) {\r\n            let tmp = itemsWithRecipe[i].components;\r\n            for (let j = 0; j < tmp.length; j++) {\r\n                if (!materialIDs.includes(tmp[j])) {\r\n                    materialIDs.push(tmp[j]);\r\n                }\r\n            }\r\n        }\r\n        let time = initialTimeHard;\r\n        if (this.props.easy) {\r\n            time = initialTimeEasy\r\n        }\r\n        this.state = {\r\n            itemsToQuiz: itemsWithRecipe,\r\n            current: 0,\r\n            materials: materialIDs,\r\n            frozen: false,\r\n            streak : 0,\r\n            score : 0,\r\n            tries : 3,\r\n            timeLeft: time,\r\n            win : false,\r\n            settings: false,\r\n            timer: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nextQuiz();\r\n    }\r\n\r\n    // Gets the item's object for a given id\r\n    getItemData = (itemID) => {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].id === itemID) {\r\n                return items[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Generates the random items to fill the rest of the quiz items with wrong items\r\n    // Tries to generate items that are close in price to the real components\r\n    generateRandomItems = (recipe) => {\r\n        let curr = this.state.current;\r\n        // Get only items that are components (items that build into other items), exclude items included in recipe\r\n        let filtered = items.filter((item) => {\r\n            for (let i = 0; i < recipe.length; i++) {\r\n                if (recipe[i] === item.id || this.state.itemsToQuiz[curr].id === item.id) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (this.state.materials.includes(item.id)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n\r\n        // Add exception for power treads (remove band of elvenskin and robe of magi)\r\n        if (this.state.itemsToQuiz[curr].id === \"power_treads\") {\r\n            for (let i = 0; i < filtered.length; i++) {\r\n                if (filtered[i].id === \"robe\" || filtered[i].id === \"boots_of_elves\") {\r\n                    filtered.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Add a special clause for broadswords and claymores (because everyone gets them confused!)\r\n        let isBroadsword;\r\n        let isClaymore;\r\n        // Get the costs of all items in the current recipe (including recipe cost)\r\n        let componentCosts = [];\r\n        for (let i = 0; i < recipe.length; i++) {\r\n            if (recipe[i] !== \"recipe\") {\r\n                let itemdata = this.getItemData(recipe[i])\r\n                componentCosts.push(itemdata.cost);\r\n                if (itemdata.id === \"broadsword\") {\r\n                    isBroadsword = true;\r\n                }\r\n                if (itemdata.id === \"claymore\") {\r\n                    isClaymore = true;\r\n                }\r\n            }\r\n        }\r\n        let recipeCost = this.state.itemsToQuiz[curr].RecipeCost;\r\n        if (recipeCost !== 0) {\r\n            componentCosts.push(recipeCost);\r\n        }\r\n\r\n        // Get items only within +/-200 of any item in the recipe\r\n        let costFiltered = filtered.filter((item) => {\r\n            for (let i = 0; i < recipe.length; i++) {\r\n                if (item.cost <= (componentCosts[i] + 200) && item.cost >= (componentCosts[i] - 200)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n\r\n        // Populate randItems with items close in cost to recipe items\r\n        let randItems = [];\r\n        let numRand = 8;\r\n        if (recipe.includes(\"recipe\")) {\r\n            numRand -= recipe.length - 1;\r\n        } else {\r\n            numRand -= recipe.length;\r\n        }\r\n        if (isBroadsword) {\r\n            numRand -= 1;\r\n            randItems.push(this.getItemData(\"claymore\"));\r\n        }\r\n        if (isClaymore) {\r\n            numRand -= 1;\r\n            randItems.push(this.getItemData(\"broadsword\"));\r\n        }\r\n        \r\n        if (costFiltered.length <= numRand) {\r\n            // Okay to add repeats if not enough valid items\r\n            randItems = randItems.concat(costFiltered);\r\n            for (let i = 0; i < numRand - randItems.length; i++) {\r\n                let rand = Math.floor(Math.random() * costFiltered.length);\r\n                randItems.push(costFiltered[rand]);\r\n            }\r\n        } else {\r\n            // Try not to add repeats if enough valid items\r\n            let alreadyPicked = [];\r\n            for (let i = 0; i < numRand; i++) {\r\n                let rand;\r\n                do {\r\n                    rand = Math.floor(Math.random() * costFiltered.length);\r\n                }  while (alreadyPicked.includes(rand));\r\n                randItems.push(costFiltered[rand]);\r\n                alreadyPicked.push(rand);\r\n            }\r\n        }\r\n        \r\n        return randItems;\r\n        \r\n    }\r\n\r\n    // Generates all the item ID's for the current quiz (fake and real)\r\n    getQuizComponents = (recipe) => {\r\n        let components = [];\r\n        for (let i = 0; i < recipe.length; i++) {\r\n            if (recipe[i] !== \"recipe\"){\r\n                let component = this.getItemData(recipe[i]);\r\n                if (component === null) {\r\n                    console.log(\"null item! id: \" + recipe[i]);\r\n                }\r\n                components.push(component);\r\n            }\r\n        }\r\n        return components.concat(this.generateRandomItems(recipe));\r\n    }\r\n\r\n    // Loads the next item to quiz, or the win state if there is no more items\r\n    nextQuiz = () => {\r\n        if (this.state.current < this.state.itemsToQuiz.length) {\r\n            let recipe = this.state.itemsToQuiz[this.state.current].components;\r\n            let components = this.getQuizComponents(recipe);\r\n            // Shuffle the components\r\n            for (let i = components.length - 1; i > 0; i--) {\r\n                let j = Math.floor(Math.random() * (i + 1));\r\n                let tmp = components[i];\r\n                components[i] = components[j];\r\n                components[j] = tmp;\r\n            }\r\n            this.setState({\r\n                currentRecipe : recipe,\r\n                currentQuiz : components\r\n            });\r\n            if (!this.props.classic) {\r\n                this.startTimer();\r\n            }\r\n        } else {\r\n            this.setState({win : true});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.classic !== this.props.classic || prevProps.easy !== this.props.easy) {\r\n            this.reset();\r\n        } else if (!this.state.frozen) {\r\n            // Check which items are selected\r\n            let recipe = this.state.currentRecipe.slice();\r\n            let selected = [];\r\n            for (let i = 0; i < this.props.selected.length; i++) {\r\n                if (this.props.selected[i] === 8) {\r\n                    selected.push(\"recipe\");\r\n                } else {\r\n                    selected.push(this.state.currentQuiz[this.props.selected[i]].id);\r\n                }\r\n                \r\n            }\r\n\r\n            // Only check for correctness if all slots are filled\r\n            if (recipe.length === selected.length) {\r\n                // Check for correctness\r\n                recipe.sort();\r\n                selected.sort();\r\n                let correct = true;\r\n                for (let i = 0; i < recipe.length; i++) {\r\n                    if(recipe[i] !== selected[i]) {\r\n                        correct = false;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // Play the popup animation\r\n                const popup = this.popupRef.current;\r\n                popup.classList.add('play-animation');\r\n\r\n                if (correct) {\r\n                    let currentStreak = this.state.streak;\r\n                    let currentScore = this.state.score;\r\n                    if (!this.props.classic) {\r\n                        clearInterval(this.state.timer);\r\n                        currentScore += Math.max(this.state.timeLeft / 20);\r\n                    } else {\r\n                        currentScore += currentStreak * 30 + 200;\r\n                    }\r\n                    currentStreak += 1;\r\n                    this.setState({\r\n                        frozen : true, \r\n                        streak : currentStreak,\r\n                        score : currentScore\r\n                    });\r\n                    // Wait for pop up text animation to end before loading next quiz\r\n                    setTimeout(() => {\r\n                        popup.classList.remove('play-animation');\r\n                        this.props.dispatch(reset());\r\n                        if (this.state.current + 1 < this.state.itemsToQuiz.length) {\r\n                            this.setState({\r\n                                frozen : false,\r\n                                current : this.state.current + 1\r\n                            });\r\n                            this.nextQuiz();\r\n                        } else {\r\n                            this.setState({\r\n                                frozen: false,\r\n                                win: true\r\n                            });\r\n                        }\r\n                    }, 1000);\r\n                } else {\r\n                    let currentTries = this.state.tries;\r\n                    if (this.props.classic) {\r\n                        currentTries -= 1;\r\n                        if (currentTries === 0) {\r\n                            this.setState({\r\n                                streak : 0,\r\n                                frozen : true\r\n                            });\r\n    \r\n                            // Wait for pop up text animation to end before loading game over screen\r\n                            setTimeout(() => {\r\n                                popup.classList.remove('play-animation');\r\n                                this.setState({\r\n                                    tries : currentTries\r\n                                });\r\n                            }, 1000);\r\n                        } else {\r\n                            this.setState({\r\n                                frozen : true, \r\n                                streak : 0,\r\n                                tries : currentTries\r\n                            });\r\n    \r\n                            // Wait for pop up text animation to end before loading next quiz\r\n                            setTimeout(() => {\r\n                                popup.classList.remove('play-animation');\r\n                                this.props.dispatch(reset());\r\n                                this.setState({frozen : false});\r\n                            }, 1000)\r\n                        }\r\n                    } else {\r\n                        this.setState({\r\n                            frozen : true, \r\n                            streak : 0,\r\n                            tries : currentTries\r\n                        });\r\n\r\n                        // Wait for pop up text animation to end before loading next quiz\r\n                        setTimeout(() => {\r\n                            if (this.state.timeLeft > 0) {\r\n                                popup.classList.remove('play-animation');\r\n                                this.props.dispatch(reset());\r\n                                this.setState({frozen : false});\r\n                            } else {\r\n                                popup.classList.remove('play-animation');\r\n                            }\r\n                        }, 1000)\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    // Gets the current streak text\r\n    getScorePopup = () => {\r\n        let text;\r\n        let amount;\r\n        if (this.props.classic) {\r\n            amount = (this.state.streak > 0) ? this.state.streak * 30 + 170 : 0;\r\n            // Just play the very last streak name for any streaks higher than it\r\n            if (this.state.streak < streakNames.length) {\r\n                text = streakNames[this.state.streak];\r\n            } else {\r\n                text = streakNames[streakNames.length - 1];\r\n            }\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        {text}\r\n                    </div>\r\n                    <div>\r\n                        {this.state.streak > 0 ? \"+\" + amount : \" \"}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            amount = Math.max(this.state.timeLeft / 20);\r\n            if (this.state.streak === 0) {\r\n                text = \"Wrong Answer!\";\r\n            } else {\r\n                let maxTime = initialTimeHard;\r\n                if (this.props.easy) {\r\n                    maxTime = initialTimeEasy;\r\n                }\r\n                if (this.state.timeLeft / maxTime <= 0.3) {\r\n                    text = timeSlow[Math.floor(Math.random() * timeSlow.length)];\r\n                } else if (this.state.timeLeft / maxTime > 0.3 && this.state.timeLeft / maxTime < 0.8) {\r\n                    text = timeNormal[Math.floor(Math.random() * timeNormal.length)];\r\n                } else {\r\n                    text = timeFast[Math.floor(Math.random() * timeFast.length)];\r\n                }\r\n            }\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        {text}\r\n                    </div>\r\n                    <div>\r\n                        {this.state.streak !== 0 ? \"+\" + amount : \" \"}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\n    // Resets the game stat back to the start and also reshuffles the item quiz order\r\n    reset = () => {\r\n        let quiz = this.state.itemsToQuiz.slice();\r\n        // Reshuffling the quiz order\r\n        for (let i = quiz.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            let tmp = quiz[i];\r\n            quiz[i] = quiz[j];\r\n            quiz[j] = tmp;\r\n        }\r\n\r\n        let recipe = quiz[0].components;\r\n        this.setState({current : 0});\r\n        let components = this.getQuizComponents(recipe);\r\n        // Shuffle the components\r\n        for (let i = components.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            let tmp = components[i];\r\n            components[i] = components[j];\r\n            components[j] = tmp;\r\n        }\r\n        this.props.dispatch(reset());\r\n        this.setState({\r\n            itemsToQuiz: quiz,\r\n            currentRecipe : recipe,\r\n            currentQuiz : components,\r\n            streak : 0,\r\n            score : 0,\r\n            tries : 3,\r\n            win : false,\r\n            frozen: false\r\n        });\r\n        if (!this.props.classic) {\r\n            this.startTimer();\r\n        }\r\n    }\r\n\r\n    openSettings = () => {\r\n        this.setState({settings : true});\r\n        if (!this.props.classic) {\r\n            clearInterval(this.state.timer);\r\n        }\r\n    }\r\n\r\n    handleSettings = (apply) => {\r\n        this.setState({settings : false});\r\n        if (!apply && !this.props.classic) {\r\n            let time = setInterval(() => {\r\n                let newTime = this.state.timeLeft - 100;\r\n                if (newTime <= 0) {\r\n                    clearInterval(this.state.timer);\r\n                    this.setState({frozen : true});\r\n                }\r\n                this.setState({timeLeft : newTime});\r\n            }, 100);\r\n            this.setState({timer : time});\r\n        }\r\n    }\r\n\r\n    startTimer = () => {\r\n        if (this.props.easy) {\r\n            this.setState({timeLeft : initialTimeEasy});\r\n        } else {\r\n            this.setState({timeLeft : initialTimeHard});\r\n        }\r\n        let time = setInterval(() => {\r\n            let newTime = this.state.timeLeft - 100;\r\n            if (newTime <= 0) {\r\n                clearInterval(this.state.timer);\r\n                this.setState({frozen : true});\r\n            }\r\n            this.setState({timeLeft : newTime});\r\n        }, 100);\r\n        this.setState({timer: time});\r\n    }\r\n\r\n    // Generates the components for the row of mystery icon symbols that will update as items are selected\r\n    createMysteryIcons = () => {\r\n        let selected = [];\r\n        let indicies = [];\r\n        for (let i = 0; i < this.props.selected.length; i++) {\r\n            if (this.props.selected[i] === 8) {\r\n                selected.push(\"recipe\");\r\n            } else {\r\n                selected.push(this.state.currentQuiz[this.props.selected[i]].id);\r\n                indicies.push(this.props.selected[i]);\r\n            }\r\n        }\r\n        let numIcons = this.state.itemsToQuiz[this.state.current].components.length;\r\n        let icons = [];\r\n        for (let i = 0; i < selected.length; i++) {\r\n            icons.push(<MysteryIcon key={i} id={selected[i]} index={indicies[i]}></MysteryIcon>);\r\n        }\r\n        for (let i = 0; i < numIcons - selected.length; i++) {\r\n            icons.push(<MysteryIcon key={i + selected.length} id={\"unknown\"} index={-1}></MysteryIcon>);\r\n        }\r\n        return icons;\r\n    }\r\n\r\n    // Generates the JSX for the quiz components\r\n    createQuizComponents = () => {\r\n        let quizItems = []\r\n        for (let i = 0; i < this.state.currentQuiz.length; i++) {\r\n            quizItems.push(<Item key={i} locked={this.state.frozen} id={this.state.currentQuiz[i].id} index={i} clickable={true}></Item>);\r\n        }\r\n        return quizItems;\r\n    }\r\n\r\n    getAnswer = () => {\r\n        let components = [];\r\n        let recipe = this.state.itemsToQuiz[this.state.current].components;\r\n        console.log(recipe);\r\n        for (let i = 0; i < recipe.length; i++) {\r\n            if (recipe[i] !== \"recipe\"){\r\n                components.push(<Item key={i} locked={true} clickable={false} id={recipe[i]}></Item>);\r\n            } else {\r\n                components.push(<Item id=\"recipe\" locked={true} clickable={false}></Item>);\r\n            }\r\n        }\r\n        return components;\r\n    }\r\n\r\n    render() {\r\n        let game = <div></div>\r\n        let footer = <div></div>\r\n        let maxTime = initialTimeHard;\r\n        if (this.props.easy) {\r\n            maxTime = initialTimeEasy;\r\n        }\r\n        \r\n        if (this.props.classic) {\r\n            footer = <div>\r\n                <StatText>\r\n                    Guesses Left: {this.state.tries}\r\n                </StatText>\r\n                <StatText>\r\n                    Score: {this.state.score}\r\n                </StatText>\r\n            </div>\r\n            \r\n        } else {\r\n            footer = <div>\r\n                <StatText>\r\n                    Score: {this.state.score}\r\n                </StatText>\r\n            </div>\r\n        }\r\n        if (this.state.settings) {\r\n            game = \r\n            <GameMain>\r\n                <Settings onClose={this.handleSettings}></Settings>\r\n            </GameMain>\r\n        } else if ((this.state.tries <= 0 && this.props.classic) || (this.state.timeLeft <= 0 && !this.props.classic)) {\r\n            game = \r\n            <GameMain>\r\n                <Dialog \r\n                    onClose={this.reset}\r\n                    item={this.state.itemsToQuiz[this.state.current]} \r\n                    streak={this.state.current} \r\n                    score={this.state.score}\r\n                    win={false}>\r\n                </Dialog>\r\n            </GameMain>\r\n        } else if (this.state.win) {\r\n            game = \r\n            <GameMain>\r\n                <Dialog onClose={this.reset} score={this.state.score} win={true} />\r\n            </GameMain>\r\n        } else {\r\n            game = \r\n            <GameMain>\r\n                <ProgressBar percentage={100 * this.state.timeLeft / maxTime}></ProgressBar>\r\n                <QuizItem>\r\n                    <Item id={this.state.itemsToQuiz[this.state.current].id} locked={this.state.frozen} clickable={false}></Item>\r\n                </QuizItem>\r\n                <Row>\r\n                    {this.createMysteryIcons()}\r\n                </Row>\r\n                <Row>\r\n                    {(this.state.currentQuiz) ? this.createQuizComponents() : \"\"}\r\n                    <Item id=\"recipe\" locked={this.state.frozen} index={8} clickable={true}></Item>\r\n                </Row>\r\n                {footer}\r\n                <OptionButton url={process.env.PUBLIC_URL + '/images/settings.png'} onClick={this.openSettings} disabled={this.state.options}></OptionButton>\r\n            </GameMain>\r\n        }\r\n        return(\r\n            <Page>\r\n                <h1>Shopkeeper's Quiz</h1>\r\n                {game}\r\n                <PopUpText ref={this.popupRef}>\r\n                    {this.getScorePopup()}\r\n                </PopUpText>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        selected : state.selected,\r\n        easy : state.easy,\r\n        classic : state.classic\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Game);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport Game from './components/game/game.js';\nimport produce from 'immer';\nimport {ThemeProvider} from 'styled-components';\n\nconst theme = {\n    breakpoints: {\n        xs: 0,\n        sm: 540,\n        md: 850,\n        lg: 1200,\n        xl: 1400\n    }\n}\n\nconst initialState = {\n    selected: [],\n    easy: true,\n    classic: true\n};\n\nfunction reducer(state = initialState, action) {\n    switch(action.type) {\n        case 'SELECT':\n            return produce(state, draft => {\n                draft.selected.push(action.value);\n            })\n        case 'DESELECT':\n            return produce(state, draft => {\n                draft.selected.splice(draft.selected.indexOf(action.value), 1);\n            })\n        case 'RESET':\n            return {\n                selected: [],\n                easy: state.easy,\n                classic: state.classic\n            }\n        case 'APPLY_SETTINGS':\n            return {\n                selected: [],\n                easy: action.value.easy,\n                classic: action.value.classic\n            }\n        case 'SET_DIFFICULTY':\n            return {\n                selected: state.selected,\n                easy: action.value,\n                classic: state.classic\n            }\n        case \"SET_GAME_MODE\":\n            return {\n                selected: state.selected,\n                easy: state.easy,\n                classic: action.value\n            }\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(reducer);\n\nconst App = () => (\n    <ThemeProvider theme={theme}>\n        <Provider store={store}>\n            <Game></Game>\n        </Provider>\n    </ThemeProvider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}